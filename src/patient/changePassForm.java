/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package patient;

import config.connectDB;
import config.pwHasher;
import config.session;
import gfx.GradientPanel;
import gfx.RoundGradientButton;
import gfx.RoundedPanel;
import gfx.RoundedPasswordField;
import java.awt.Color;
import java.security.NoSuchAlgorithmException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Administrator
 */
public class changePassForm extends javax.swing.JFrame {

    /**
     * Creates new form changePassForm
     */
    public changePassForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new GradientPanel(new Color(250,249, 246), new Color(227, 249, 246), 1);
        jLabel1 = new javax.swing.JLabel();
        showCPass = new javax.swing.JLabel();
        hideCPass = new javax.swing.JLabel();
        cpass = new RoundedPasswordField(35);
        showPass = new javax.swing.JLabel();
        hidePass = new javax.swing.JLabel();
        newPass = new RoundedPasswordField(35);
        jButton2 = new RoundGradientButton("Sign Up", new Color(131, 164, 212), new Color(182, 251, 255), 35);
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        errorLabelCPass = new javax.swing.JLabel();
        errorLabelOldPass = new javax.swing.JLabel();
        errorLabelPass = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        showOldPass = new javax.swing.JLabel();
        hideOldPass = new javax.swing.JLabel();
        oldPass = new RoundedPasswordField(35);
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel2 = new RoundedPanel(20);
        jPanel2.setBackground(new java.awt.Color(250, 249, 246));
        jPanel2.setForeground(new java.awt.Color(50, 49, 204));
        jPanel2.setMinimumSize(new java.awt.Dimension(326, 344));
        jPanel2.setPreferredSize(new java.awt.Dimension(460, 480));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Change Password");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 230, 40));

        showCPass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/view.png"))); // NOI18N
        showCPass.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        showCPass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showCPassMouseClicked(evt);
            }
        });
        jPanel2.add(showCPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 350, 30, 40));

        hideCPass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/hide.png"))); // NOI18N
        hideCPass.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hideCPass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hideCPassMouseClicked(evt);
            }
        });
        jPanel2.add(hideCPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 350, 30, 40));

        cpass.setEchoChar('\u2022');
        cpass.setOpaque(false);
        cpass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cpassFocusLost(evt);
            }
        });
        jPanel2.add(cpass, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 350, 430, 40));

        showPass.setForeground(new java.awt.Color(102, 102, 102));
        showPass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/view.png"))); // NOI18N
        showPass.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        showPass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showPassMouseClicked(evt);
            }
        });
        jPanel2.add(showPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 240, 30, 40));

        hidePass.setForeground(new java.awt.Color(102, 102, 102));
        hidePass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/hide.png"))); // NOI18N
        hidePass.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hidePass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hidePassMouseClicked(evt);
            }
        });
        jPanel2.add(hidePass, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 240, 30, 40));

        newPass.setEchoChar('\u2022');
        newPass.setOpaque(false);
        newPass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                newPassFocusLost(evt);
            }
        });
        newPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPassActionPerformed(evt);
            }
        });
        jPanel2.add(newPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 240, 430, 40));

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jButton2.setForeground(new java.awt.Color(250, 249, 246));
        jButton2.setText("Submit");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 460, 150, 50));

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Confirm Password");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 330, 200, 20));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setText("Old Password");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 170, 20));

        errorLabelCPass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                errorLabelCPassFocusLost(evt);
            }
        });
        jPanel2.add(errorLabelCPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 390, 200, 20));
        jPanel2.add(errorLabelOldPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, 190, 20));

        errorLabelPass.setToolTipText("Password too short. Must be 8 characters or more");
        jPanel2.add(errorLabelPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 280, 190, 20));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/close.png"))); // NOI18N
        jLabel8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 50, 30, 30));

        showOldPass.setForeground(new java.awt.Color(102, 102, 102));
        showOldPass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/view.png"))); // NOI18N
        showOldPass.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        showOldPass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showOldPassMouseClicked(evt);
            }
        });
        jPanel2.add(showOldPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 130, 30, 40));

        hideOldPass.setForeground(new java.awt.Color(102, 102, 102));
        hideOldPass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/hide.png"))); // NOI18N
        hideOldPass.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hideOldPass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hideOldPassMouseClicked(evt);
            }
        });
        jPanel2.add(hideOldPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 130, 30, 40));

        oldPass.setEchoChar('\u2022');
        oldPass.setOpaque(false);
        oldPass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                oldPassFocusLost(evt);
            }
        });
        oldPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oldPassActionPerformed(evt);
            }
        });
        jPanel2.add(oldPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, 430, 40));

        jLabel9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel9.setText("New Password");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 220, 170, 20));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 650, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 593, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private boolean verifyOldPassword(String oldPassInput) {
        try {
            connectDB conn = new connectDB();
            session sess = session.getInstance();

            String query = "SELECT u_pass FROM user WHERE u_id = ?";
            PreparedStatement pstmt = conn.getConnection().prepareStatement(query);
            pstmt.setString(1, sess.getU_id());
            ResultSet rs = pstmt.executeQuery();

            if (rs.next()) {
                String oldpw = rs.getString("u_pass"); // Hashed password from DB
                return pwHasher.verifyPassword(oldPassInput, oldpw); // Compare input with hashed password
            }

            rs.close();
            pstmt.close();
        } catch (SQLException | NoSuchAlgorithmException ex) {
            System.out.println("Error: " + ex);
        }

        return false;
    }

    

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked

        this.dispose();
    }//GEN-LAST:event_jLabel8MouseClicked

    private void errorLabelCPassFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_errorLabelCPassFocusLost

    }//GEN-LAST:event_errorLabelCPassFocusLost

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        
        LocalDate actionDate = LocalDate.now();
        LocalTime atime = LocalTime.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm");
        String actionTime = atime.format(formatter);
        
        if (signUpValidation()) {

            try {
                connectDB conn = new connectDB();
                session sess = session.getInstance();

                String hashedNewPW = pwHasher.hashPassword(newPass.getText());
                
                conn.updateData("UPDATE user SET u_pass = '"+hashedNewPW+"' WHERE u_id = '"+sess.getU_id()+"'");
                this.dispose();
                
                conn.insertData("INSERT INTO logs (u_id, action, action_date, action_time)"
                        + "VALUES ('"+sess.getU_id()+"', 'Changed password', '"+actionDate+"', '"+actionTime+"')");
                
                
            } catch (NoSuchAlgorithmException ex) {
                System.out.println("" + ex);
            }

        } else {
            JOptionPane.showMessageDialog(this, "Submit error. Please fill all required field.", "Warning", JOptionPane.WARNING_MESSAGE);
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void newPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newPassActionPerformed

    private void newPassFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newPassFocusLost

        String passInput = newPass.getText();

        if (passInput.isEmpty()) {
            newPass.setForeground(Color.RED);
            errorLabelPass.setText("Password is required");
            errorLabelPass.setForeground(Color.RED);
        } else if (passInput.length() < 8) {

            newPass.setForeground(Color.RED);
            errorLabelPass.setText("Password too short. Must be 8 characters or more");
            errorLabelPass.setForeground(Color.RED);
        } else {
            newPass.setForeground(Color.BLACK);
            errorLabelPass.setText("Password good");
            errorLabelPass.setForeground(Color.GREEN);
        }
        newPass.repaint();
    }//GEN-LAST:event_newPassFocusLost

    private void hidePassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hidePassMouseClicked

        newPass.setEchoChar('•');
        hidePass.setVisible(false);
        showPass.setVisible(true);
    }//GEN-LAST:event_hidePassMouseClicked

    private void showPassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showPassMouseClicked

        newPass.setEchoChar((char) 0);
        showPass.setVisible(false);
        hidePass.setVisible(true);
    }//GEN-LAST:event_showPassMouseClicked

    private void cpassFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cpassFocusLost

        String passInput = new String(newPass.getPassword());
        String cPassInput = cpass.getText();

        if (cPassInput.isEmpty()) {
            cpass.setForeground(Color.RED);
            errorLabelCPass.setText("This field is required");
            errorLabelCPass.setForeground(Color.RED);
        } else if (!passInput.equals(cPassInput)) {
            cpass.setForeground(Color.RED);
            errorLabelCPass.setText("Password does not match");
            errorLabelCPass.setForeground(Color.RED);
        } else {
            cpass.setForeground(Color.BLACK);
            errorLabelCPass.setText("Password matched");
            errorLabelCPass.setForeground(Color.GREEN);
        }

        cpass.repaint();
    }//GEN-LAST:event_cpassFocusLost

    private void hideCPassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hideCPassMouseClicked

        cpass.setEchoChar('•');
        hideCPass.setVisible(false);
        showCPass.setVisible(true);
    }//GEN-LAST:event_hideCPassMouseClicked

    private void showCPassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showCPassMouseClicked

        cpass.setEchoChar((char) 0);
        showCPass.setVisible(false);
        hideCPass.setVisible(true);
    }//GEN-LAST:event_showCPassMouseClicked

    private void oldPassFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_oldPassFocusLost

        String passInput = oldPass.getText();

        if (passInput.isEmpty()) {
            oldPass.setForeground(Color.RED);
            errorLabelOldPass.setText("Password is required");
            errorLabelOldPass.setForeground(Color.RED);
        } else if (passInput.length() < 8) {

            oldPass.setForeground(Color.RED);
            errorLabelOldPass.setText("Password too short. Must be 8 characters or more");
            errorLabelOldPass.setForeground(Color.RED);
        } else if (!verifyOldPassword(passInput)) {

            oldPass.setForeground(Color.RED);
            errorLabelOldPass.setText("Old password is incorrect");
            errorLabelOldPass.setForeground(Color.RED);

        } else {
            oldPass.setForeground(Color.BLACK);
            errorLabelOldPass.setText("Password good");
            errorLabelOldPass.setForeground(Color.GREEN);
        }
        oldPass.repaint();
    }//GEN-LAST:event_oldPassFocusLost

    private void oldPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oldPassActionPerformed

    }//GEN-LAST:event_oldPassActionPerformed

    private void showOldPassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showOldPassMouseClicked

        oldPass.setEchoChar((char) 0);
        showOldPass.setVisible(false);
        hideOldPass.setVisible(true);

    }//GEN-LAST:event_showOldPassMouseClicked

    private void hideOldPassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hideOldPassMouseClicked

        oldPass.setEchoChar('•');
        hideOldPass.setVisible(false);
        showOldPass.setVisible(true);


    }//GEN-LAST:event_hideOldPassMouseClicked

    private boolean signUpValidation() {

        boolean valid = true;

        String newPassInput = newPass.getText();

        if (newPassInput.isEmpty()) {
            newPass.setForeground(Color.RED);
            errorLabelPass.setText("Password is required");
            errorLabelPass.setForeground(Color.RED);
            valid = false;
        } else if (newPassInput.length() < 8) {

            newPass.setForeground(Color.RED);
            errorLabelPass.setText("Password too short. Must be 8 characters or more");
            errorLabelPass.setForeground(Color.RED);
            valid = false;
        } else {
            newPass.setForeground(Color.BLACK);
            errorLabelPass.setText("Password good");
            errorLabelPass.setForeground(Color.GREEN);
        }
        newPass.repaint();

        String passInput = new String(newPass.getPassword());
        String cPassInput = cpass.getText();

        if (cPassInput.isEmpty()) {
            cpass.setForeground(Color.RED);
            errorLabelCPass.setText("This field is required");
            errorLabelCPass.setForeground(Color.RED);
            valid = false;
        } else if (!passInput.equals(cPassInput)) {
            cpass.setForeground(Color.RED);
            errorLabelCPass.setText("Password does not match");
            errorLabelCPass.setForeground(Color.RED);
            valid = false;
        } else {
            cpass.setForeground(Color.BLACK);
            errorLabelCPass.setText("Password matched");
            errorLabelCPass.setForeground(Color.GREEN);
        }

        cpass.repaint();

        String oldPassInput = oldPass.getText();

        if (oldPassInput.isEmpty()) {
            oldPass.setForeground(Color.RED);
            errorLabelOldPass.setText("Password is required");
            valid = false;
            errorLabelOldPass.setForeground(Color.RED);
        } else if (oldPassInput.length() < 8) {

            oldPass.setForeground(Color.RED);
            errorLabelOldPass.setText("Password too short. Must be 8 characters or more");
            errorLabelOldPass.setForeground(Color.RED);
            valid = false;
            
        } else if (!verifyOldPassword(oldPassInput)) {

            oldPass.setForeground(Color.RED);
            errorLabelOldPass.setText("Old password is incorrect");
            errorLabelOldPass.setForeground(Color.RED);

            valid = false;
            
        } else {
            oldPass.setForeground(Color.BLACK);
            errorLabelOldPass.setText("Password good");
            errorLabelOldPass.setForeground(Color.GREEN);
        }
        oldPass.repaint();

        return valid;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(changePassForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(changePassForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(changePassForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(changePassForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new changePassForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField cpass;
    private javax.swing.JLabel errorLabelCPass;
    private javax.swing.JLabel errorLabelOldPass;
    private javax.swing.JLabel errorLabelPass;
    private javax.swing.JLabel hideCPass;
    private javax.swing.JLabel hideOldPass;
    private javax.swing.JLabel hidePass;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField newPass;
    private javax.swing.JPasswordField oldPass;
    private javax.swing.JLabel showCPass;
    private javax.swing.JLabel showOldPass;
    private javax.swing.JLabel showPass;
    // End of variables declaration//GEN-END:variables
}
