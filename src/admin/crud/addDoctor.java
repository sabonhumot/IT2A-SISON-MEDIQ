/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package admin.crud;

import admin.doctorMenu;
import config.connectDB;
import config.pwHasher;
import config.session;
import gfx.GradientPanel;
import gfx.RoundGradientButton;
import gfx.RoundedPanel;
import gfx.RoundedPasswordField;
import gfx.RoundedTextField;
import java.awt.Color;
import java.security.NoSuchAlgorithmException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;

/**
 *
 * @author PC10
 */
public class addDoctor extends javax.swing.JFrame {

    /**
     * Creates new form addDoctor
     */
    public addDoctor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new GradientPanel(new Color(250,249, 246), new Color(227, 249, 246), 1);
        jLabel1 = new javax.swing.JLabel();
        firstname = new RoundedTextField(35);
        lastname = new RoundedTextField(35);
        phonennum = new RoundedTextField(35);
        showCPass = new javax.swing.JLabel();
        hideCPass = new javax.swing.JLabel();
        cpass = new RoundedPasswordField(35);
        showPass = new javax.swing.JLabel();
        hidePass = new javax.swing.JLabel();
        pass = new RoundedPasswordField(35);
        jButton2 = new RoundGradientButton("Sign Up", new Color(131, 164, 212), new Color(182, 251, 255), 35);
        email = new RoundedTextField(35);
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        errorLabelCPass = new javax.swing.JLabel();
        errorLabelFName = new javax.swing.JLabel();
        errorLabelLName = new javax.swing.JLabel();
        errorLabelPnum = new javax.swing.JLabel();
        errorLabelEmail = new javax.swing.JLabel();
        errorLabelPass = new javax.swing.JLabel();
        username = new RoundedTextField(35);
        user = new javax.swing.JLabel();
        errorLabelUser = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel2 = new RoundedPanel(20);
        jPanel2.setBackground(new java.awt.Color(250, 249, 246));
        jPanel2.setForeground(new java.awt.Color(50, 49, 204));
        jPanel2.setMinimumSize(new java.awt.Dimension(326, 344));
        jPanel2.setPreferredSize(new java.awt.Dimension(460, 480));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add Doctor");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 160, 40));

        firstname.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        firstname.setOpaque(false);
        firstname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                firstnameFocusLost(evt);
            }
        });
        firstname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstnameActionPerformed(evt);
            }
        });
        jPanel2.add(firstname, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, 200, 40));

        lastname.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        lastname.setOpaque(false);
        lastname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                lastnameFocusLost(evt);
            }
        });
        lastname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastnameActionPerformed(evt);
            }
        });
        jPanel2.add(lastname, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 120, 210, 40));

        phonennum.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        phonennum.setOpaque(false);
        phonennum.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                phonennumFocusLost(evt);
            }
        });
        phonennum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phonennumActionPerformed(evt);
            }
        });
        jPanel2.add(phonennum, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 210, 200, 40));

        showCPass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/view.png"))); // NOI18N
        showCPass.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        showCPass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showCPassMouseClicked(evt);
            }
        });
        jPanel2.add(showCPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 390, 30, 40));

        hideCPass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/hide.png"))); // NOI18N
        hideCPass.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hideCPass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hideCPassMouseClicked(evt);
            }
        });
        jPanel2.add(hideCPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 390, 30, 40));

        cpass.setOpaque(false);
        cpass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cpassFocusLost(evt);
            }
        });
        jPanel2.add(cpass, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 390, 200, 40));

        showPass.setForeground(new java.awt.Color(102, 102, 102));
        showPass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/view.png"))); // NOI18N
        showPass.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        showPass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showPassMouseClicked(evt);
            }
        });
        jPanel2.add(showPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 390, 30, 40));

        hidePass.setForeground(new java.awt.Color(102, 102, 102));
        hidePass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/hide.png"))); // NOI18N
        hidePass.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hidePass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hidePassMouseClicked(evt);
            }
        });
        jPanel2.add(hidePass, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 390, 30, 40));

        pass.setOpaque(false);
        pass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                passFocusLost(evt);
            }
        });
        pass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passActionPerformed(evt);
            }
        });
        jPanel2.add(pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 390, 200, 40));

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jButton2.setForeground(new java.awt.Color(250, 249, 246));
        jButton2.setText("Submit");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 460, 150, 50));

        email.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        email.setOpaque(false);
        email.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                emailFocusLost(evt);
            }
        });
        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });
        jPanel2.add(email, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 210, 210, 40));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Email Address");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 190, 190, 20));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Username");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 280, 170, 20));

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Last Name");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 100, 160, 20));

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Confirm Password");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 370, 200, 20));

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setText("Phone Number");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 190, 180, 20));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setText("Password");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 370, 170, 20));

        errorLabelCPass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                errorLabelCPassFocusLost(evt);
            }
        });
        jPanel2.add(errorLabelCPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 430, 200, 20));
        jPanel2.add(errorLabelFName, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 160, 190, 20));
        jPanel2.add(errorLabelLName, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 160, 210, 20));
        jPanel2.add(errorLabelPnum, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 250, 200, 20));
        jPanel2.add(errorLabelEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 250, 200, 20));

        errorLabelPass.setToolTipText("Password too short. Must be 8 characters or more");
        jPanel2.add(errorLabelPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 430, 190, 20));

        username.setToolTipText("Username");
        username.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        username.setOpaque(false);
        username.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                usernameFocusLost(evt);
            }
        });
        username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameActionPerformed(evt);
            }
        });
        jPanel2.add(username, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 300, 430, 40));

        user.setText("First Name");
        jPanel2.add(user, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, 150, 20));
        jPanel2.add(errorLabelUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 340, 190, 20));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/close.png"))); // NOI18N
        jLabel8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 50, 30, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 650, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 593, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void firstnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_firstnameFocusLost

        String fname = firstname.getText();

        if (fname.isEmpty()) {

            firstname.setForeground(Color.RED);
            errorLabelFName.setText("This field is required");
            errorLabelFName.setForeground(Color.RED);

        } else {
            firstname.setForeground(Color.BLACK);
            errorLabelFName.setText("");
            errorLabelFName.setForeground(Color.RED);
        }

        firstname.repaint();
    }//GEN-LAST:event_firstnameFocusLost

    private void firstnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstnameActionPerformed

    }//GEN-LAST:event_firstnameActionPerformed

    private void lastnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lastnameFocusLost

        String lname = lastname.getText();

        if (lname.isEmpty()) {
            lastname.setForeground(Color.RED);
            errorLabelLName.setText("This field is required");
            errorLabelLName.setForeground(Color.RED);
        } else {
            lastname.setForeground(Color.BLACK);
            errorLabelLName.setText("");
            errorLabelLName.setForeground(Color.RED);
        }

        lastname.repaint();
    }//GEN-LAST:event_lastnameFocusLost

    private void lastnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastnameActionPerformed

    private void phonennumFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phonennumFocusLost

        String phoneRegex = "^[0-9]{11}$";
        String phoneInput = phonennum.getText();

        if (phoneInput.isEmpty()) {

            phonennum.setForeground(Color.RED);
            errorLabelPnum.setText("Phone number is required");
            errorLabelPnum.setForeground(Color.RED);

        } else if (!phoneInput.matches(phoneRegex)) {

            phonennum.setForeground(Color.RED);
            errorLabelPnum.setText("Phone number is invalid");
            errorLabelPnum.setForeground(Color.RED);
        } else {

            phonennum.setForeground(Color.GREEN);
            errorLabelPnum.setText("");

        }

        phonennum.repaint();
    }//GEN-LAST:event_phonennumFocusLost

    private void phonennumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phonennumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phonennumActionPerformed

    private void showCPassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showCPassMouseClicked

        cpass.setEchoChar((char) 0);
        showCPass.setVisible(false);
        hideCPass.setVisible(true);
    }//GEN-LAST:event_showCPassMouseClicked

    private void hideCPassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hideCPassMouseClicked

        cpass.setEchoChar('•');
        hideCPass.setVisible(false);
        showCPass.setVisible(true);
    }//GEN-LAST:event_hideCPassMouseClicked

    private void cpassFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cpassFocusLost

        String passInput = new String(pass.getPassword());
        String cPassInput = cpass.getText();

        if (cPassInput.isEmpty()) {
            cpass.setForeground(Color.RED);
            errorLabelCPass.setText("This field is required");
            errorLabelCPass.setForeground(Color.RED);
        } else if (!passInput.equals(cPassInput)) {
            cpass.setForeground(Color.RED);
            errorLabelCPass.setText("Password does not match");
            errorLabelCPass.setForeground(Color.RED);
        } else {
            cpass.setForeground(Color.BLACK);
            errorLabelCPass.setText("Password matched");
            errorLabelCPass.setForeground(Color.GREEN);
        }

        cpass.repaint();
    }//GEN-LAST:event_cpassFocusLost

    private void showPassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showPassMouseClicked

        pass.setEchoChar((char) 0);
        showPass.setVisible(false);
        hidePass.setVisible(true);
    }//GEN-LAST:event_showPassMouseClicked

    private void hidePassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hidePassMouseClicked

        pass.setEchoChar('•');
        hidePass.setVisible(false);
        showPass.setVisible(true);
    }//GEN-LAST:event_hidePassMouseClicked

    private void passFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passFocusLost

        String passInput = pass.getText();

        if (passInput.isEmpty()) {
            pass.setForeground(Color.RED);
            errorLabelPass.setText("Password is required");
            errorLabelPass.setForeground(Color.RED);
        } else if (passInput.length() < 8) {

            pass.setForeground(Color.RED);
            errorLabelPass.setText("Password too short. Must be 8 characters or more");
            errorLabelPass.setForeground(Color.RED);
        } else {
            pass.setForeground(Color.BLACK);
            errorLabelPass.setText("Password good");
            errorLabelPass.setForeground(Color.GREEN);
        }
        pass.repaint();
    }//GEN-LAST:event_passFocusLost

    private void passActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        LocalDate actionDate = LocalDate.now();
        LocalTime atime = LocalTime.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm");
        String actionTime = atime.format(formatter);
        
        if (signUpValidation()) {

            connectDB con = new connectDB();
            session sess = session.getInstance();
            
            try {
                
                String hashedPW = pwHasher.hashPassword(pass.getText());

            con.insertData("INSERT INTO user (u_fname, u_lname, u_email, u_pnum, u_user, u_pass, type, status)"
                    + "VALUES ('" + firstname.getText() + "','" + lastname.getText() + "','" + email.getText() + "',"
                    + "'" + phonennum.getText() + "','" + username.getText() + "','" + hashedPW + "','Doctor','Pending')");

            JOptionPane.showMessageDialog(this, "Doctor Added Successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);

            this.dispose();
            
            doctorMenu dM = new doctorMenu();
            dM.displayData();
            dM.getDoctorCount();
            dM.emptyData();
            
            
            
            con.insertData("INSERT INTO logs (u_id, action, action_date)"
                    + "VALUES ('"+sess.getU_id()+"', 'Added a Doctor type account', '"+actionDate+"', '"+actionTime+"')");

            } catch (NoSuchAlgorithmException e) {
                System.out.println("" + e);
            }
            
            
        } else {

            JOptionPane.showMessageDialog(this, "Sign up error. Please fill all required field.", "Warning", JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void emailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailFocusLost

        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$";
        String emailInput = email.getText();

        if (emailInput.isEmpty()) {

            email.setForeground(Color.RED);
            errorLabelEmail.setText("Email is required");
            errorLabelEmail.setForeground(Color.RED);

        } else if (!emailInput.matches(emailRegex)) {

            email.setForeground(Color.RED);
            errorLabelEmail.setText("Email is invalid");
            errorLabelEmail.setForeground(Color.RED);

        } else if (emailExists(emailInput)) {

            email.setForeground(Color.RED);
            errorLabelEmail.setText("Email already exists");
            errorLabelEmail.setForeground(Color.RED);

        } else {

            email.setForeground(Color.GREEN);
            errorLabelEmail.setText("Email valid");
            errorLabelEmail.setForeground(Color.GREEN);

        }

        email.repaint();
    }//GEN-LAST:event_emailFocusLost

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailActionPerformed

    private void errorLabelCPassFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_errorLabelCPassFocusLost

    }//GEN-LAST:event_errorLabelCPassFocusLost

    private void usernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameFocusLost

        String user = username.getText();

        if (user.isEmpty()) {
            username.setForeground(Color.RED);
            errorLabelUser.setText("Username is required");
            errorLabelUser.setForeground(Color.RED);
        } else if (usernameExists(user)) {

            username.setForeground(Color.RED);
            errorLabelUser.setText("Username already exists");
            errorLabelUser.setForeground(Color.RED);
        } else {
            username.setForeground(Color.BLACK);
            errorLabelUser.setText("Username valid");
            errorLabelUser.setForeground(Color.GREEN);
        }

        username.repaint();
    }//GEN-LAST:event_usernameFocusLost

    private void usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameActionPerformed

    }//GEN-LAST:event_usernameActionPerformed

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked

        this.dispose();
    }//GEN-LAST:event_jLabel8MouseClicked

    private boolean signUpValidation() {
        boolean valid = true;

        //fname validation
        String fname = firstname.getText();

        if (fname.isEmpty()) {

            firstname.setForeground(Color.RED);
            errorLabelFName.setText("This field is required");
            errorLabelFName.setForeground(Color.RED);
            valid = false;
        } else {
            firstname.setForeground(Color.BLACK);
            errorLabelFName.setText("");
            errorLabelFName.setForeground(Color.RED);
        }

        firstname.repaint();

        //lname validation
        String lname = lastname.getText();

        if (lname.isEmpty()) {
            lastname.setForeground(Color.RED);
            errorLabelLName.setText("This field is required");
            errorLabelLName.setForeground(Color.RED);
            valid = false;
        } else {
            lastname.setForeground(Color.BLACK);
            errorLabelLName.setText("");
            errorLabelLName.setForeground(Color.RED);
        }

        lastname.repaint();

        //pnum validation
        String phoneRegex = "^[0-9]{11}$";
        String phoneInput = phonennum.getText();

        if (phoneInput.isEmpty()) {

            phonennum.setForeground(Color.RED);
            errorLabelPnum.setText("Phone number is required");
            errorLabelPnum.setForeground(Color.RED);
            valid = false;

        } else if (!phoneInput.matches(phoneRegex)) {

            phonennum.setForeground(Color.RED);
            errorLabelPnum.setText("Phone number is invalid");
            errorLabelPnum.setForeground(Color.RED);
            valid = false;
        } else {
            phonennum.setForeground(Color.BLACK);
            errorLabelPnum.setText("");
        }

        phonennum.repaint();

        //email validation
        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$";
        String emailInput = email.getText();

        if (emailInput.isEmpty()) {

            email.setForeground(Color.RED);
            errorLabelEmail.setText("Email is required");
            errorLabelEmail.setForeground(Color.RED);
            valid = false;

        } else if (!emailInput.matches(emailRegex)) {

            email.setForeground(Color.RED);
            errorLabelEmail.setText("Email is invalid");
            errorLabelEmail.setForeground(Color.RED);
            valid = false;
        } else if (emailExists(emailInput)) {

            email.setForeground(Color.RED);
            errorLabelEmail.setText("Email already exists");
            errorLabelEmail.setForeground(Color.RED);
            valid = false;

        } else {

            email.setForeground(Color.BLACK);
            errorLabelEmail.setText("Email valid");
            errorLabelEmail.setForeground(Color.GREEN);

        }

        email.repaint();

        //username validation
        String user = username.getText();

        if (user.isEmpty()) {
            username.setForeground(Color.RED);
            errorLabelUser.setText("Username is required");
            errorLabelUser.setForeground(Color.RED);
            valid = false;
        } else if (usernameExists(user)) {

            username.setForeground(Color.RED);
            errorLabelUser.setText("Username already exists");
            errorLabelUser.setForeground(Color.RED);
            valid = false;

        } else {
            username.setForeground(Color.BLACK);
            errorLabelUser.setText("Username valid");
            errorLabelUser.setForeground(Color.GREEN);
        }

        username.repaint();

        //pass validation
        String passInput = pass.getText();

        if (passInput.isEmpty()) {
            pass.setForeground(Color.RED);
            errorLabelPass.setText("Password is required");
            errorLabelPass.setForeground(Color.RED);
            valid = false;
        } else if (passInput.length() < 8) {

            pass.setForeground(Color.RED);
            errorLabelPass.setText("Password too short. Must be 8 characters or more");
            errorLabelPass.setForeground(Color.RED);
            valid = false;
        } else {
            pass.setForeground(Color.BLACK);
            errorLabelPass.setText("");
        }
        pass.repaint();

        //cpass validation
        String cPassInput = cpass.getText();

        if (cPassInput.isEmpty()) {
            cpass.setForeground(Color.RED);
            errorLabelCPass.setText("This field is required");
            errorLabelCPass.setForeground(Color.RED);
            valid = false;
        } else if (!passInput.equals(cPassInput)) {
            cpass.setForeground(Color.RED);
            errorLabelCPass.setText("Password does not match");
            errorLabelCPass.setForeground(Color.RED);
            valid = false;
        } else {
            cpass.setForeground(Color.BLACK);
            errorLabelCPass.setText("");
        }

        cpass.repaint();

        return valid;
    }

    private boolean usernameExists(String username) {

        connectDB con = new connectDB();

        try {
            String query = "SELECT * FROM user WHERE u_user = ?";
            PreparedStatement pstmt = con.getConnection().prepareStatement(query);
            pstmt.setString(1, username.trim());
            ResultSet resultSet = pstmt.executeQuery();

            if (resultSet.next()) {

                return true;
            }

        } catch (SQLException ex) {

        }
        return false;
    }

    private boolean emailExists(String email) {

        connectDB con = new connectDB();

        try {
            String query = "SELECT * FROM user WHERE u_email = ?";
            PreparedStatement pstmt = con.getConnection().prepareStatement(query);
            pstmt.setString(1, email.trim());
            ResultSet resultSet = pstmt.executeQuery();

            if (resultSet.next()) {

                return true;
            }

        } catch (SQLException ex) {
            System.out.println("" + ex);

        }

        return false;

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addDoctor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField cpass;
    private javax.swing.JTextField email;
    private javax.swing.JLabel errorLabelCPass;
    private javax.swing.JLabel errorLabelEmail;
    private javax.swing.JLabel errorLabelFName;
    private javax.swing.JLabel errorLabelLName;
    private javax.swing.JLabel errorLabelPass;
    private javax.swing.JLabel errorLabelPnum;
    private javax.swing.JLabel errorLabelUser;
    private javax.swing.JTextField firstname;
    private javax.swing.JLabel hideCPass;
    private javax.swing.JLabel hidePass;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField lastname;
    private javax.swing.JPasswordField pass;
    private javax.swing.JTextField phonennum;
    private javax.swing.JLabel showCPass;
    private javax.swing.JLabel showPass;
    private javax.swing.JLabel user;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
