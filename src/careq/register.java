package careq;

import config.connectDB;
import config.pwHasher;
import config.session;
import gfx.RoundGradientButton;
import gfx.RoundedPasswordField;
import gfx.RoundedTextField;
import gfx.RoundedPanel;
import gfx.GradientPanel;
import java.awt.Color;
import javax.swing.JFrame;
import gfx.RoundedButton;
import java.awt.Font;
import java.awt.FontFormatException;
import java.awt.GraphicsEnvironment;
import java.io.IOException;
import java.io.InputStream;
import java.security.NoSuchAlgorithmException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.Period;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.text.MaskFormatter;
import javax.swing.JFormattedTextField;
import javax.swing.JTextField;

/**
 *
 * @author Administrator
 */
public class register extends javax.swing.JFrame {

    public register() {
        initComponents();

        loadFont();

        showPass.setVisible(true);
        hidePass.setVisible(false);

        showCPass.setVisible(true);
        hideCPass.setVisible(false);

    }

    private boolean emailExists(String email) {

        connectDB con = new connectDB();

        try {
            String query = "SELECT * FROM user WHERE u_email = ?";
            PreparedStatement pstmt = con.getConnection().prepareStatement(query);
            pstmt.setString(1, email.trim());
            ResultSet resultSet = pstmt.executeQuery();

            if (resultSet.next()) {

                return true;
            }

        } catch (SQLException ex) {
            System.out.println("" + ex);

        }

        return false;

    }

    private boolean usernameExists(String username) {

        connectDB con = new connectDB();

        try {
            String query = "SELECT * FROM user WHERE u_user = ?";
            PreparedStatement pstmt = con.getConnection().prepareStatement(query);
            pstmt.setString(1, username.trim());
            ResultSet resultSet = pstmt.executeQuery();

            if (resultSet.next()) {

                return true;
            }

        } catch (SQLException ex) {

        }
        return false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        signupSuccess = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        signupError = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        register = new GradientPanel(new Color(182, 251, 255), new Color(131, 164, 212), 2);
        jPanel2 = new GradientPanel(new Color(250,249, 246), new Color(227, 249, 246), 1);
        jLabel1 = new javax.swing.JLabel();
        firstname = new RoundedTextField(35);
        lastname = new RoundedTextField(35);
        phonennum = new RoundedTextField(35);
        showCPass = new javax.swing.JLabel();
        hideCPass = new javax.swing.JLabel();
        cpass = new RoundedPasswordField(35);
        showPass = new javax.swing.JLabel();
        hidePass = new javax.swing.JLabel();
        pass = new RoundedPasswordField(35);
        jButton2 = new RoundGradientButton("Sign Up", new Color(131, 164, 212), new Color(182, 251, 255), 35);
        email = new RoundedTextField(35);
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        errorLabelCPass = new javax.swing.JLabel();
        errorLabelFName = new javax.swing.JLabel();
        errorLabelLName = new javax.swing.JLabel();
        errorLabelPnum = new javax.swing.JLabel();
        errorLabelEmail = new javax.swing.JLabel();
        errorLabelPass = new javax.swing.JLabel();
        login = new javax.swing.JLabel();
        username = new RoundedTextField(35);
        user = new javax.swing.JLabel();
        errorLabelUser = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        type = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        errorType = new javax.swing.JLabel();
        errorSQ = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        birthdate = new RoundedTextField(15);
        user1 = new javax.swing.JLabel();
        user2 = new javax.swing.JLabel();
        femaleButton = new javax.swing.JRadioButton();
        maleButton = new javax.swing.JRadioButton();
        dateError = new javax.swing.JLabel();
        sexLabelError = new javax.swing.JLabel();

        this.pack();
        this.setLocationRelativeTo(null);
        signupSuccess.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        signupSuccess.setSize(new java.awt.Dimension(362, 246));

        jPanel1.setMinimumSize(new java.awt.Dimension(360, 246));
        jPanel1.setRequestFocusEnabled(false);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setText("Signed up successfully.");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, -1, 30));

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 160, 90, 30));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/success.png"))); // NOI18N
        jLabel9.setText("jLabel9");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, 50, 50));

        javax.swing.GroupLayout signupSuccessLayout = new javax.swing.GroupLayout(signupSuccess.getContentPane());
        signupSuccess.getContentPane().setLayout(signupSuccessLayout);
        signupSuccessLayout.setHorizontalGroup(
            signupSuccessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        signupSuccessLayout.setVerticalGroup(
            signupSuccessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );

        this.pack();
        this.setLocationRelativeTo(null);
        signupError.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        signupError.setMinimumSize(new java.awt.Dimension(378, 238));
        signupError.setSize(new java.awt.Dimension(378, 238));

        jPanel3.setMinimumSize(new java.awt.Dimension(378, 238));
        jPanel3.setPreferredSize(new java.awt.Dimension(378, 238));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel10.setText("Sign up error. Please fill all required fields");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 330, 30));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/error.png"))); // NOI18N
        jPanel3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, 50, 40));

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setText("OK");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 150, 90, 30));

        javax.swing.GroupLayout signupErrorLayout = new javax.swing.GroupLayout(signupError.getContentPane());
        signupError.getContentPane().setLayout(signupErrorLayout);
        signupErrorLayout.setHorizontalGroup(
            signupErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        signupErrorLayout.setVerticalGroup(
            signupErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(700, 700));

        register.setBackground(new java.awt.Color(31, 63, 195));
        register.setMinimumSize(new java.awt.Dimension(797, 479));
        register.setPreferredSize(new java.awt.Dimension(700, 700));
        register.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2 = new RoundedPanel(20);
        jPanel2.setBackground(new java.awt.Color(250, 249, 246));
        jPanel2.setForeground(new java.awt.Color(50, 49, 204));
        jPanel2.setMinimumSize(new java.awt.Dimension(326, 344));
        jPanel2.setPreferredSize(new java.awt.Dimension(460, 480));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Sign Up");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, 100, 40));

        firstname.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        firstname.setOpaque(false);
        firstname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                firstnameFocusLost(evt);
            }
        });
        firstname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstnameActionPerformed(evt);
            }
        });
        jPanel2.add(firstname, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 120, 200, 40));

        lastname.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        lastname.setOpaque(false);
        lastname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                lastnameFocusLost(evt);
            }
        });
        lastname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastnameActionPerformed(evt);
            }
        });
        jPanel2.add(lastname, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 120, 210, 40));

        phonennum.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        phonennum.setOpaque(false);
        phonennum.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                phonennumFocusLost(evt);
            }
        });
        phonennum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phonennumActionPerformed(evt);
            }
        });
        jPanel2.add(phonennum, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 210, 200, 40));

        showCPass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/view.png"))); // NOI18N
        showCPass.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        showCPass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showCPassMouseClicked(evt);
            }
        });
        jPanel2.add(showCPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 690, 30, 40));

        hideCPass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/hide.png"))); // NOI18N
        hideCPass.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hideCPass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hideCPassMouseClicked(evt);
            }
        });
        jPanel2.add(hideCPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 690, 30, 40));

        cpass.setEchoChar('\u2022');
        cpass.setOpaque(false);
        cpass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cpassFocusLost(evt);
            }
        });
        jPanel2.add(cpass, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 690, 430, 40));

        showPass.setForeground(new java.awt.Color(102, 102, 102));
        showPass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/view.png"))); // NOI18N
        showPass.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        showPass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showPassMouseClicked(evt);
            }
        });
        jPanel2.add(showPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 590, 30, 40));

        hidePass.setForeground(new java.awt.Color(102, 102, 102));
        hidePass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/hide.png"))); // NOI18N
        hidePass.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hidePass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hidePassMouseClicked(evt);
            }
        });
        jPanel2.add(hidePass, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 590, 30, 40));

        pass.setEchoChar('\u2022');
        pass.setOpaque(false);
        pass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                passFocusLost(evt);
            }
        });
        pass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passActionPerformed(evt);
            }
        });
        jPanel2.add(pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 590, 430, 40));

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jButton2.setForeground(new java.awt.Color(250, 249, 246));
        jButton2.setText("Sign up");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 780, 430, 50));

        email.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        email.setOpaque(false);
        email.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                emailFocusLost(evt);
            }
        });
        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });
        jPanel2.add(email, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 210, 210, 40));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Email Address");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 190, 190, 20));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Username");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 380, 170, 20));

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Last Name");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 100, 160, 20));

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Confirm Password");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 670, 200, 20));

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setText("Phone Number");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 190, 180, 20));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setText("Password");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 570, 170, 20));

        errorLabelCPass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                errorLabelCPassFocusLost(evt);
            }
        });
        jPanel2.add(errorLabelCPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 730, 200, 20));
        jPanel2.add(errorLabelFName, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 160, 190, 20));
        jPanel2.add(errorLabelLName, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 160, 210, 20));
        jPanel2.add(errorLabelPnum, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 250, 200, 20));
        jPanel2.add(errorLabelEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 250, 200, 20));

        errorLabelPass.setToolTipText("Password too short. Must be 8 characters or more");
        jPanel2.add(errorLabelPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 630, 190, 20));

        login.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        login.setText("Already have an account? Login here");
        login.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        login.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginMouseClicked(evt);
            }
        });
        jPanel2.add(login, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 870, -1, -1));

        username.setToolTipText("Username");
        username.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        username.setOpaque(false);
        username.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                usernameFocusLost(evt);
            }
        });
        username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameActionPerformed(evt);
            }
        });
        jPanel2.add(username, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 400, 430, 40));

        user.setText("First Name");
        jPanel2.add(user, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 150, 20));
        jPanel2.add(errorLabelUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 440, 190, 20));

        jSeparator1.setForeground(new java.awt.Color(31, 63, 195));
        jSeparator1.setAutoscrolls(true);
        jSeparator1.setPreferredSize(new java.awt.Dimension(50, 50));
        jPanel2.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 100, 10));

        type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "(Choose account type)", "Patient", "Doctor", " " }));
        type.setBorder(null);
        type.setOpaque(false);
        type.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                typeFocusLost(evt);
            }
        });
        type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeActionPerformed(evt);
            }
        });
        jPanel2.add(type, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 490, 430, 40));

        jLabel12.setText("Type");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 470, 70, -1));
        jPanel2.add(errorType, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 530, 190, 20));
        jPanel2.add(errorSQ, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 350, 190, 20));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/close.png"))); // NOI18N
        jLabel15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 30, 30, 30));

        try  {
            MaskFormatter dateFormatter = new MaskFormatter("####/##/##");
            birthdate = new JFormattedTextField(dateFormatter);
        } catch (Exception e){
            birthdate = new JFormattedTextField();
        }
        birthdate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                birthdateFocusLost(evt);
            }
        });
        jPanel2.add(birthdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 310, 200, 40));

        user1.setText("Birthdate (YYYY/MM/DD)");
        jPanel2.add(user1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 290, 150, 20));

        user2.setText("Sex");
        jPanel2.add(user2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 290, 150, 20));

        femaleButton.setBackground(new java.awt.Color(250, 249, 246));
        femaleButton.setText("Female");
        femaleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femaleButtonActionPerformed(evt);
            }
        });
        jPanel2.add(femaleButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 310, 120, 40));

        maleButton.setBackground(new java.awt.Color(250, 249, 246));
        maleButton.setText("Male");
        maleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleButtonActionPerformed(evt);
            }
        });
        jPanel2.add(maleButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 310, 80, 40));
        jPanel2.add(dateError, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 350, 200, 20));
        jPanel2.add(sexLabelError, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 350, 200, 20));

        register.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 630, 910));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(register, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(register, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 930, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void firstnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstnameActionPerformed

    }//GEN-LAST:event_firstnameActionPerformed

    private void lastnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastnameActionPerformed

    private void phonennumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phonennumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phonennumActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        LocalDate actionDate = LocalDate.now();
        LocalTime atime = LocalTime.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm");
        String actionTime = atime.format(formatter);
        String sex = "";

        if (signUpValidation()) {

            connectDB con = new connectDB();
            session sess = session.getInstance();

            try {
                String hashedPW = pwHasher.hashPassword(pass.getText());

                int age = AgeCalculator(birthdate);
                
                
                if (maleButton.isSelected()) {
                    sex = "Male";
                } else if (femaleButton.isSelected()) {
                    sex = "Female";
                }

                con.insertData("INSERT INTO user (u_fname, u_lname, u_email, u_pnum, u_user, u_pass, type, status, age, sex)"
                        + "VALUES ('" + firstname.getText() + "','" + lastname.getText() + "','" + email.getText() + "',"
                        + "'" + phonennum.getText() + "','" + username.getText() + "','" + hashedPW + "',"
                        + "'" + type.getSelectedItem() + "', 'Pending', '" + age + "', '" + sex + "')");

                JOptionPane.showMessageDialog(this, "Registration successful!", "Success", JOptionPane.INFORMATION_MESSAGE);

                logIn lg = new logIn();
                lg.setVisible(true);
                this.dispose();

//                con.insertData("INSERT INTO logs (u_id, action, action_date, action_time)"
//                        + "VALUES ('"+session.getU_id()+"', 'Registered an account', '"+actionDate+"', '"+actionTime+"')");
            } catch (NoSuchAlgorithmException ex) {
                System.out.println("" + ex);
            }

        } else {

            JOptionPane.showMessageDialog(this, "Sign up error. Please fill all required field.", "Warning", JOptionPane.WARNING_MESSAGE);

        }

    }//GEN-LAST:event_jButton2ActionPerformed

    public static int AgeCalculator(JTextField birthDateField) {
        try {
            // Get the text from the JTextField
            String birthdayString = birthDateField.getText().trim();

            // Define the date pattern matching the expected format (e.g., 2000/05/03)
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy/MM/dd");

            // Parse the birth date string to LocalDate
            LocalDate birthDate = LocalDate.parse(birthdayString, formatter);

            // Get current date
            LocalDate currentDate = LocalDate.now();

            // Validate and calculate age
            if (!birthDate.isAfter(currentDate)) {
                return Period.between(birthDate, currentDate).getYears();
            } else {
                System.out.println("Birth date is in the future.");
                return -1;
            }
        } catch (DateTimeParseException e) {
            System.out.println("Error parsing birth date: " + e.getMessage());
            return -1;
        }
    }

    private void firstnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_firstnameFocusLost

        String fname = firstname.getText();

        if (fname.isEmpty()) {

            firstname.setForeground(Color.RED);
            errorLabelFName.setText("This field is required");
            errorLabelFName.setForeground(Color.RED);

        } else {
            firstname.setForeground(Color.BLACK);
            errorLabelFName.setText("");
            errorLabelFName.setForeground(Color.RED);
        }

        firstname.repaint();

    }//GEN-LAST:event_firstnameFocusLost

    private void lastnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lastnameFocusLost

        String lname = lastname.getText();

        if (lname.isEmpty()) {
            lastname.setForeground(Color.RED);
            errorLabelLName.setText("This field is required");
            errorLabelLName.setForeground(Color.RED);
        } else {
            lastname.setForeground(Color.BLACK);
            errorLabelLName.setText("");
            errorLabelLName.setForeground(Color.RED);
        }

        lastname.repaint();
    }//GEN-LAST:event_lastnameFocusLost

    private void phonennumFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phonennumFocusLost

        String phoneRegex = "^[0-9]{11}$";
        String phoneInput = phonennum.getText();

        if (phoneInput.isEmpty()) {

            phonennum.setForeground(Color.RED);
            errorLabelPnum.setText("Phone number is required");
            errorLabelPnum.setForeground(Color.RED);

        } else if (!phoneInput.matches(phoneRegex)) {

            phonennum.setForeground(Color.RED);
            errorLabelPnum.setText("Phone number is invalid");
            errorLabelPnum.setForeground(Color.RED);
        } else {

            phonennum.setForeground(Color.GREEN);
            errorLabelPnum.setText("");

        }

        phonennum.repaint();

    }//GEN-LAST:event_phonennumFocusLost

    private void emailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailFocusLost

        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$";
        String emailInput = email.getText();

        if (emailInput.isEmpty()) {

            email.setForeground(Color.RED);
            errorLabelEmail.setText("Email is required");
            errorLabelEmail.setForeground(Color.RED);

        } else if (!emailInput.matches(emailRegex)) {

            email.setForeground(Color.RED);
            errorLabelEmail.setText("Email is invalid");
            errorLabelEmail.setForeground(Color.RED);

        } else if (emailExists(emailInput)) {

            email.setForeground(Color.RED);
            errorLabelEmail.setText("Email already exists");
            errorLabelEmail.setForeground(Color.RED);

        } else {

            email.setForeground(Color.GREEN);
            errorLabelEmail.setText("Email valid");
            errorLabelEmail.setForeground(Color.GREEN);

        }

        email.repaint();
    }//GEN-LAST:event_emailFocusLost


    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailActionPerformed

    private void passActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passActionPerformed

    private void errorLabelCPassFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_errorLabelCPassFocusLost

    }//GEN-LAST:event_errorLabelCPassFocusLost

    private void passFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passFocusLost

        String passInput = pass.getText();

        if (passInput.isEmpty()) {
            pass.setForeground(Color.RED);
            errorLabelPass.setText("Password is required");
            errorLabelPass.setForeground(Color.RED);
        } else if (passInput.length() < 8) {

            pass.setForeground(Color.RED);
            errorLabelPass.setText("Password too short. Must be 8 characters or more");
            errorLabelPass.setForeground(Color.RED);
        } else {
            pass.setForeground(Color.BLACK);
            errorLabelPass.setText("Password good");
            errorLabelPass.setForeground(Color.GREEN);
        }
        pass.repaint();

    }//GEN-LAST:event_passFocusLost

    private void cpassFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cpassFocusLost

        String passInput = new String(pass.getPassword());
        String cPassInput = cpass.getText();

        if (cPassInput.isEmpty()) {
            cpass.setForeground(Color.RED);
            errorLabelCPass.setText("This field is required");
            errorLabelCPass.setForeground(Color.RED);
        } else if (!passInput.equals(cPassInput)) {
            cpass.setForeground(Color.RED);
            errorLabelCPass.setText("Password does not match");
            errorLabelCPass.setForeground(Color.RED);
        } else {
            cpass.setForeground(Color.BLACK);
            errorLabelCPass.setText("Password matched");
            errorLabelCPass.setForeground(Color.GREEN);
        }

        cpass.repaint();

    }//GEN-LAST:event_cpassFocusLost

    private void showPassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showPassMouseClicked

        pass.setEchoChar((char) 0);
        showPass.setVisible(false);
        hidePass.setVisible(true);

    }//GEN-LAST:event_showPassMouseClicked

    private void loginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginMouseClicked

        logIn lg = new logIn();

        lg.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_loginMouseClicked

    private void hideCPassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hideCPassMouseClicked

        cpass.setEchoChar('•');
        hideCPass.setVisible(false);
        showCPass.setVisible(true);

    }//GEN-LAST:event_hideCPassMouseClicked

    private void showCPassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showCPassMouseClicked

        cpass.setEchoChar((char) 0);
        showCPass.setVisible(false);
        hideCPass.setVisible(true);
    }//GEN-LAST:event_showCPassMouseClicked

    private void usernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameFocusLost

        String user = username.getText();

        if (user.isEmpty()) {
            username.setForeground(Color.RED);
            errorLabelUser.setText("Username is required");
            errorLabelUser.setForeground(Color.RED);
        } else if (usernameExists(user)) {

            username.setForeground(Color.RED);
            errorLabelUser.setText("Username already exists");
            errorLabelUser.setForeground(Color.RED);
        } else {
            username.setForeground(Color.BLACK);
            errorLabelUser.setText("Username valid");
            errorLabelUser.setForeground(Color.GREEN);
        }

        username.repaint();


    }//GEN-LAST:event_usernameFocusLost

    private void usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameActionPerformed

    }//GEN-LAST:event_usernameActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        logIn lg = new logIn();

        this.dispose();
        lg.setVisible(true);

        signupSuccess.dispose();


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        signupError.setVisible(false);


    }//GEN-LAST:event_jButton3ActionPerformed

    private void hidePassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hidePassMouseClicked

        pass.setEchoChar('•');
        hidePass.setVisible(false);
        showPass.setVisible(true);
    }//GEN-LAST:event_hidePassMouseClicked

    private void typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeActionPerformed


    }//GEN-LAST:event_typeActionPerformed

    private void typeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_typeFocusLost
        if (type.getSelectedIndex() == 0) {
            type.setForeground(Color.RED);
            errorType.setText("Please choose account type");
            errorType.setForeground(Color.RED);
        } else {
            type.setForeground(Color.BLACK);
            errorType.setText("");
        }

        type.repaint();
    }//GEN-LAST:event_typeFocusLost

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked

        logIn lg = new logIn();

        lg.setVisible(true);

        this.dispose();
    }//GEN-LAST:event_jLabel15MouseClicked

    private void birthdateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_birthdateFocusLost

        DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("yyyy/MM/dd");

        if (birthdate.getText().trim().isEmpty()) {
            birthdate.setForeground(Color.RED);
            dateError.setText("Please set a valid date");
            dateError.setForeground(Color.RED);

        } else {
            try {

                LocalDate inputDate = LocalDate.parse(birthdate.getText().trim(), dateFormatter);
                LocalDate today = LocalDate.now();

                if (inputDate.isAfter(today)) {
                    birthdate.setForeground(Color.RED);
                    dateError.setText("Invalid Birthdate");
                    dateError.setForeground(Color.RED);

                } else {
                    birthdate.setForeground(Color.BLACK);
                    dateError.setText("");
                    dateError.setForeground(Color.BLACK);
                }

            } catch (DateTimeParseException ex) {
                birthdate.setForeground(Color.RED);
                dateError.setText("Invalid date format. Use YYYY/MM/DD");
                dateError.setForeground(Color.RED);
                System.out.println("" + ex);
            }
        }

        birthdate.repaint();
    }//GEN-LAST:event_birthdateFocusLost

    private void femaleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femaleButtonActionPerformed

        if (femaleButton.isSelected()) {
            maleButton.setEnabled(false);
        } else {
            maleButton.setEnabled(true);
        }

    }//GEN-LAST:event_femaleButtonActionPerformed

    private void maleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleButtonActionPerformed

        if (maleButton.isSelected()) {
            femaleButton.setEnabled(false);
        } else {
            femaleButton.setEnabled(true);
        }

    }//GEN-LAST:event_maleButtonActionPerformed

    private boolean signUpValidation() {
        boolean valid = true;

        //fname validation
        String fname = firstname.getText();

        if (fname.isEmpty()) {

            firstname.setForeground(Color.RED);
            errorLabelFName.setText("This field is required");
            errorLabelFName.setForeground(Color.RED);
            valid = false;
        } else {
            firstname.setForeground(Color.BLACK);
            errorLabelFName.setText("");
            errorLabelFName.setForeground(Color.RED);
        }

        firstname.repaint();

        //lname validation
        String lname = lastname.getText();

        if (lname.isEmpty()) {
            lastname.setForeground(Color.RED);
            errorLabelLName.setText("This field is required");
            errorLabelLName.setForeground(Color.RED);
            valid = false;
        } else {
            lastname.setForeground(Color.BLACK);
            errorLabelLName.setText("");
            errorLabelLName.setForeground(Color.RED);
        }

        lastname.repaint();

        //pnum validation
        String phoneRegex = "^[0-9]{11}$";
        String phoneInput = phonennum.getText();

        if (phoneInput.isEmpty()) {

            phonennum.setForeground(Color.RED);
            errorLabelPnum.setText("Phone number is required");
            errorLabelPnum.setForeground(Color.RED);
            valid = false;

        } else if (!phoneInput.matches(phoneRegex)) {

            phonennum.setForeground(Color.RED);
            errorLabelPnum.setText("Phone number is invalid");
            errorLabelPnum.setForeground(Color.RED);
            valid = false;
        } else {
            phonennum.setForeground(Color.BLACK);
            errorLabelPnum.setText("");
        }

        phonennum.repaint();

        //email validation
        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$";
        String emailInput = email.getText();

        if (emailInput.isEmpty()) {

            email.setForeground(Color.RED);
            errorLabelEmail.setText("Email is required");
            errorLabelEmail.setForeground(Color.RED);
            valid = false;

        } else if (!emailInput.matches(emailRegex)) {

            email.setForeground(Color.RED);
            errorLabelEmail.setText("Email is invalid");
            errorLabelEmail.setForeground(Color.RED);
            valid = false;
        } else if (emailExists(emailInput)) {

            email.setForeground(Color.RED);
            errorLabelEmail.setText("Email already exists");
            errorLabelEmail.setForeground(Color.RED);
            valid = false;

        } else {

            email.setForeground(Color.BLACK);
            errorLabelEmail.setText("Email valid");
            errorLabelEmail.setForeground(Color.GREEN);

        }

        email.repaint();

        //username validation
        String user = username.getText();

        if (user.isEmpty()) {
            username.setForeground(Color.RED);
            errorLabelUser.setText("Username is required");
            errorLabelUser.setForeground(Color.RED);
            valid = false;
        } else if (usernameExists(user)) {

            username.setForeground(Color.RED);
            errorLabelUser.setText("Username already exists");
            errorLabelUser.setForeground(Color.RED);
            valid = false;

        } else {
            username.setForeground(Color.BLACK);
            errorLabelUser.setText("Username valid");
            errorLabelUser.setForeground(Color.GREEN);
        }

        username.repaint();

        //pass validation
        String passInput = pass.getText();

        if (passInput.isEmpty()) {
            pass.setForeground(Color.RED);
            errorLabelPass.setText("Password is required");
            errorLabelPass.setForeground(Color.RED);
            valid = false;
        } else if (passInput.length() < 8) {

            pass.setForeground(Color.RED);
            errorLabelPass.setText("Password too short. Must be 8 characters or more");
            errorLabelPass.setForeground(Color.RED);
            valid = false;
        } else {
            pass.setForeground(Color.BLACK);
            errorLabelPass.setText("");
        }
        pass.repaint();

        //cpass validation
        String cPassInput = cpass.getText();

        if (cPassInput.isEmpty()) {
            cpass.setForeground(Color.RED);
            errorLabelCPass.setText("This field is required");
            errorLabelCPass.setForeground(Color.RED);
            valid = false;
        } else if (!passInput.equals(cPassInput)) {
            cpass.setForeground(Color.RED);
            errorLabelCPass.setText("Password does not match");
            errorLabelCPass.setForeground(Color.RED);
            valid = false;
        } else {
            cpass.setForeground(Color.BLACK);
            errorLabelCPass.setText("");
        }

        cpass.repaint();

        //type validation
        if (type.getSelectedIndex() == 0) {
            type.setForeground(Color.RED);
            errorType.setText("Please choose account type");
            errorType.setForeground(Color.RED);
            valid = false;
        } else {
            type.setForeground(Color.BLACK);
            errorType.setText("");
        }

        type.repaint();

        if (!maleButton.isSelected() && !femaleButton.isSelected()) {
            sexLabelError.setText("Please select one option");
            sexLabelError.setForeground(Color.RED);
            maleButton.setForeground(Color.RED);
            femaleButton.setForeground(Color.BLACK);
            valid = false;
        } else {
            sexLabelError.setText("");
            sexLabelError.setForeground(Color.BLACK);
            maleButton.setForeground(Color.BLACK);
            femaleButton.setForeground(Color.BLACK);

            maleButton.repaint();
            femaleButton.repaint();
        }

        DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("yyyy/MM/dd");

        if (birthdate.getText().trim().isEmpty()) {
            birthdate.setForeground(Color.RED);
            dateError.setText("Please set a valid date");
            dateError.setForeground(Color.RED);
            valid = false;
        } else {
            try {

                LocalDate inputDate = LocalDate.parse(birthdate.getText().trim(), dateFormatter);
                LocalDate today = LocalDate.now();

                if (inputDate.isAfter(today)) {
                    birthdate.setForeground(Color.RED);
                    dateError.setText("Invalid Birthdate");
                    dateError.setForeground(Color.RED);
                    valid = false;
                } else {
                    birthdate.setForeground(Color.BLACK);
                    dateError.setText("");
                    dateError.setForeground(Color.BLACK);
                }

            } catch (DateTimeParseException ex) {
                birthdate.setForeground(Color.RED);
                dateError.setText("Invalid date format. Use YYYY/MM/DD");
                dateError.setForeground(Color.RED);
                System.out.println("" + ex);
            }
        }

        birthdate.repaint();

        return valid;
    }

    private void loadFont() {
        try {
            InputStream fontStream = getClass().getResourceAsStream("/font/OpenSans-VariableFont_wdth,wght.ttf");
            if (fontStream != null) {
                Font openSans = Font.createFont(Font.TRUETYPE_FONT, fontStream);
                GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
                ge.registerFont(openSans);
                // Now you can use the font:
                jLabel1.setFont(openSans.deriveFont(Font.BOLD, 24));
                user.setFont(openSans.deriveFont(Font.PLAIN, 14));
                jLabel4.setFont(openSans.deriveFont(Font.PLAIN, 14));
                jLabel6.setFont(openSans.deriveFont(Font.PLAIN, 14));
                jLabel2.setFont(openSans.deriveFont(Font.PLAIN, 14));
                jLabel3.setFont(openSans.deriveFont(Font.PLAIN, 14));
                jLabel7.setFont(openSans.deriveFont(Font.PLAIN, 14));
                jLabel5.setFont(openSans.deriveFont(Font.PLAIN, 14));
                jButton2.setFont(openSans.deriveFont(Font.BOLD, 20));
                login.setFont(openSans.deriveFont(Font.PLAIN, 14));
                jLabel12.setFont(openSans.deriveFont(Font.PLAIN, 14));
                type.setFont(openSans.deriveFont(Font.PLAIN, 12));

                // ... set font for other components
            } else {
                System.err.println("Font file not found!");
            }
        } catch (IOException | FontFormatException e) {
            e.printStackTrace();
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new register().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField birthdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.JPasswordField cpass;
    private javax.swing.JLabel dateError;
    private javax.swing.JTextField email;
    private javax.swing.JLabel errorLabelCPass;
    private javax.swing.JLabel errorLabelEmail;
    private javax.swing.JLabel errorLabelFName;
    private javax.swing.JLabel errorLabelLName;
    private javax.swing.JLabel errorLabelPass;
    private javax.swing.JLabel errorLabelPnum;
    private javax.swing.JLabel errorLabelUser;
    private javax.swing.JLabel errorSQ;
    private javax.swing.JLabel errorType;
    private javax.swing.JRadioButton femaleButton;
    private javax.swing.JTextField firstname;
    private javax.swing.JLabel hideCPass;
    private javax.swing.JLabel hidePass;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField lastname;
    private javax.swing.JLabel login;
    private javax.swing.JRadioButton maleButton;
    private javax.swing.JPasswordField pass;
    private javax.swing.JTextField phonennum;
    private javax.swing.JPanel register;
    private javax.swing.JLabel sexLabelError;
    private javax.swing.JLabel showCPass;
    private javax.swing.JLabel showPass;
    private javax.swing.JDialog signupError;
    private javax.swing.JDialog signupSuccess;
    private javax.swing.JComboBox<String> type;
    private javax.swing.JLabel user;
    private javax.swing.JLabel user1;
    private javax.swing.JLabel user2;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
